# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Modules,Migrations,Tests,Kernel.php,Provider}'

    App\Modules\:
        resource: '../src/Modules/*'
        exclude: '../src/Modules/{System/Manager/Hidden}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    monolog.formatter.importer:
        class: Monolog\Formatter\LineFormatter
        arguments:
            - "[%%datetime%%] [%%extra.token%%] %%channel%%.%%level_name%%: %%message%% %%context%% %%extra%%\n"

    App\Translation\Translator:
        decorates: translator

    App\Logger\UserDetailProcessor:
        tags:
            - { name: 'monolog.processor' }

    App\Translation\Logger:
        arguments:
            $stream: '%kernel.logs_dir%/translation.%kernel.environment%.log'
            $level:    'warning'
            $bubble:   false

    App\Util\CacheHelper:
        arguments:
            $caching: '%caching%'

    App\Manager\RouterLoader:
        tags: [ 'routing.loader' ]

    App\Listeners\ParamConverterListener:
        arguments:
            $logger: '@monolog.logger.request'

    App\Manager\PageManager:
        arguments:
            $logger: '@monolog.logger.page'

    App\Modules\Security\Manager\RoleHierarchy:
        decorates: 'security.role_hierarchy'
        arguments:
            $hierarchy: '%security.hierarchy.roles%'

    App\Listeners\ImageListener:
        tags:
            - { name: 'doctrine.event_subscriber' }

    App\Modules\System\Manager\DemoDataManager:
        arguments:
            $logger: '@monolog.logger.installation'

    App\Modules\People\Pagination\PeoplePagination:
        calls:
            - ['setHierarchy', ['@security.role_hierarchy']]

    App\Modules\People\Form\FamilyGeneralType:
        calls:
            - ['setPreferredLanguages', ['%preferred_languages%']]

    App\Provider\ProviderFactory:
        class: App\Provider\ProviderFactory

    App\Modules\System\Manager\InstallationManager:
        calls:
            - ['setLogger', ['@monolog.logger.installation']]

    App\Modules\System\Manager\CreateManager:
        calls:
            - ['setLogger', ['@monolog.logger.installation']]
            - ['setPrefix', ['%databasePrefix%']]

    App\Modules\System\Form\SystemType:
        calls:
            - ['setParameterBag', ['@parameter_bag']]

