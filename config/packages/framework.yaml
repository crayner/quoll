framework:
    secret: '%env(APP_SECRET)%'
    csrf_protection: true
    #http_method_override: true

    # Enables session support. Note that the session will ONLY be started if you read or write from it.
    # Remove or comment this section to explicitly disable session support.
    session:
        handler_id: session.handler.native_file
        cookie_secure: auto
        cookie_samesite: strict
        cookie_lifetime: 0
        name: kookaburra_session
        save_path: '%kernel.project_dir%/var/sessions'

    #esi: true
    #fragments: true
    php_errors:
        log: true

    cache:
        # Put the unique name of your app here: the prefix seed
        # is used to compute stable namespaces for cache keys.
        prefix_seed: crayner/kookaburra

        # The app cache caches to the filesystem by default.
        # Other options include:

        # Redis
        #app: cache.adapter.redis
        #default_redis_provider: redis://localhost

        # APCu (not recommended with heavy random-write workloads as memory fragmentation can cause perf issues)
        #app: cache.adapter.apcu
    assets:
        base_urls:
            - '%absoluteURL%/'

    validation:
        email_validation_mode: html5
        #enabled: true
        enable_annotations: true

        # Enables validator auto-mapping support.
        # For instance, basic validation constraints will be inferred from Doctrine's metadata.
        auto_mapping:
            App\Entity\: []
            App\Modules\Comms\Entity\: []
            App\Modules\Enrolment\Entity\: []
            App\Modules\Finance\Entity\: []
            App\Modules\People\Entity\: []
            App\Modules\School\Entity\: []
            App\Modules\Security\Entity\: []
            App\Modules\Staff\Entity\: []
            App\Modules\System\Entity\: []
            App\Modules\Timetable\Entity\: []

#    messenger:
#        transports:
#            async: "%messenger_transport_dsn%"

#        routing:
#            'Symfony\Component\Mailer\Messenger\SendEmailMessage':  async